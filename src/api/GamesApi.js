/**
 * MaxwinServiceApi
 * Cluttery Maxwin game client API
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  module.exports = factory(require('../ApiClient'), require('../model/Game'), require('../model/Error'), require('../model/FinishedGame'));
}(this, function(ApiClient, Game, Error, FinishedGame) {
  'use strict';

  /**
   * Games service.
   * @module api/GamesApi
   * @version 1.0.0
   */

  /**
   * Constructs a new GamesApi. 
   * @alias module:api/GamesApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the gamesGetCurrentGames operation.
     * @callback module:api/GamesApi~gamesGetCurrentGamesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Game>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns current games info
     * Returns info about current running games 
     * @param {module:api/GamesApi~gamesGetCurrentGamesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Game>}
     */
    this.gamesGetCurrentGames = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = [Game];

      return this.apiClient.callApi(
        '/games/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the gamesGetHistory operation.
     * @callback module:api/GamesApi~gamesGetHistoryCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/FinishedGame>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns finished games and their results
     * Returns part of games history. Only finished games inclued. Games are returned sorted by finished timestamp descending. 
     * @param {Object} opts Optional parameters
     * @param {Number} opts.skip Pagination skip items (default 0)
     * @param {Number} opts.limit Pagination limit items (default 10)
     * @param {module:api/GamesApi~gamesGetHistoryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/FinishedGame>}
     */
    this.gamesGetHistory = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'skip': opts['skip'],
        'limit': opts['limit']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = [FinishedGame];

      return this.apiClient.callApi(
        '/games/history', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
